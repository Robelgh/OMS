// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(OMSDbContext))]
    partial class OMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(3607));

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(4921));

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Domain.ProductTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(5158));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(5265));

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(5543));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passworded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 11, 26, 8, 47, 29, 817, DateTimeKind.Utc).AddTicks(5703));

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("a4810e82-a4d4-4a61-9474-258cbe3923bd"),
                            CreatedBy = "Robel",
                            CreatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 200, DateTimeKind.Utc).AddTicks(4239),
                            Email = "john.doe@example.com",
                            LastName = "Doe",
                            Name = "Robel",
                            Passworded = "$2a$11$AyhIuGlPXdyf/OHwtqvV5ugdkm.70ZcYsYN84TX6JVQUKjJ6DHOiS",
                            PhoneNumber = "123-456-7890",
                            Role = "Admin",
                            Status = 1,
                            UpdatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 200, DateTimeKind.Utc).AddTicks(4242)
                        },
                        new
                        {
                            ID = new Guid("59357f53-ef79-46d7-8aee-6c1c62c74a92"),
                            CreatedBy = "Robel",
                            CreatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 375, DateTimeKind.Utc).AddTicks(8805),
                            Email = "jane.smith@example.com",
                            LastName = "Smith",
                            Name = "Jane",
                            Passworded = "$2a$11$ltr.8RuZiq3IJ6.PGpTqL.32izaHhbT5zaN3GfIHEzntECoWsIO.y",
                            PhoneNumber = "987-654-3210",
                            Role = "User",
                            Status = 1,
                            UpdatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 375, DateTimeKind.Utc).AddTicks(8815)
                        },
                        new
                        {
                            ID = new Guid("f019602b-3057-4565-ab2e-e8c1c79bbb41"),
                            CreatedBy = "Robel",
                            CreatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 602, DateTimeKind.Utc).AddTicks(9818),
                            Email = "robert.brown@example.com",
                            LastName = "Brown",
                            Name = "Robert",
                            Passworded = "$2a$11$EU2bejTgia/rkineKnOQ.OHISANfT5rTJkJdKS72yISwnPOqWGEYi",
                            PhoneNumber = "555-666-7777",
                            Role = "Manager",
                            Status = 1,
                            UpdatedDate = new DateTime(2024, 11, 26, 8, 47, 29, 602, DateTimeKind.Utc).AddTicks(9822)
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.HasOne("Domain.ProductTypes", "ProductTypes")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("Domain.ProductTypes", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
